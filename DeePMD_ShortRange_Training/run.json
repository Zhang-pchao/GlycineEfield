{
    "model": {
      "type_map":           ["H","O","N","C"],      
	  "descriptor": {
		"_comment":         "if type = se_a_tpe: canâ€™t apply compression method while using atom type embedding",
        "type":             "se_e2_a",
		"_comment":         "sel: [16 32 32] means maximal number of neighbors = 16H 32O 32N",
		"_comment":         "sel: auto:1.1 means automatically counts maximal number of neighbors*1.1",
        "sel":              "auto:1.1",
        "rcut_smth":        0.5,
        "rcut":             6.0,
        "neuron":           [25,50,100],
		"activation_function": "tanh",
        "resnet_dt":        false,
		"_comment":         "axis_neuron: Size of the submatrix of G (embedding matrix)",
        "axis_neuron":      16,
		"seed":             20231224,
	    "_comment":		    "descriptor that's all--------------------------------------------------------------"		
      },
      "fitting_net": {
		"_comment":         "other types: dipole or polar",
		"type":             "ener",
        "neuron":           [240,240,240],
		"activation_function": "tanh",
        "resnet_dt":        true,
		"seed":             20231224,
	    "_comment":		    "fitting_net that's all-------------------------------------------------------------"		
      },  
    "_comment": " model that's all------------------------------------------------------------------------------"
    },

    "loss": {
		"_comment": "loss = pref_e * loss_e + pref_f * loss_f + pref_v * loss_v",
		"_comment": "pref_f(t) = start_pref_f * ( lr(t) / start_lr ) + limit_pref_f * ( 1 - lr(t) / start_lr )",
        "start_pref_e":      0.02,
        "limit_pref_e":      1.0,
        "start_pref_f":      1000,
        "limit_pref_f":      1.0,
        "start_pref_v":      0.0,
        "limit_pref_v":      0.0,
	    "_comment": " loss that's all-----------------------------------------------------------------------------"
    },

    "learning_rate": {
		"_comment": "lr(t) = start_lr * decay_rate ^ ( training step / decay_steps )",
		"_comment": "decay_rate and decay_steps are automatically determined by start_lr, stop_lr and training step)",
        "type":              "exp",
		"_comment": "When parallel training or batch size scaled, how to alter learning rate. Valid values are linear`(default), `sqrt or none.",
		"_scale_by_worker":   "sqrt",
        "start_lr":          1e-03,
	"stop_lr":               1e-08,
	    "_comment": " learning_rate that's all--------------------------------------------------------------------"
    },

    "training": {
        "numb_steps":        5000000,
	"seed":                  20231224,
        "disp_file":         "lcurve.out",
        "disp_freq":         1000,
        "numb_test":         10,
        "save_freq":         10000,
        "save_ckpt":         "model.ckpt",
        "disp_training":     true,
        "time_training":     true,
        "profiling":         false,
        "profiling_file":    "timeline.json",
	"training_data": {
	    "systems":		 [
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/003",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/004",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/005",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/006",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/007",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/008",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/009",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/010",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/011",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/012",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/013",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/014",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/015",
			"/home/pengchao/glycine/dataset/KS_M062X/water/dp_dataset_scf_1e-6/016",				
		
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/001",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/002",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/003",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/004",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/005",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/006",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/007",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/008",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/009",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/010",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/011",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/012",						
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/013",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/014",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/016",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/017",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/018",									
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/019",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/020",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/021",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/022",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/023",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/024",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/025",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/026",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/027",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/028",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/029",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/030",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/031",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/032",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/033",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/034",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/035",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/036",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/037",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/038",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/039",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/040",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/041",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/042",
			"/home/pengchao/glycine/dataset/KS_M062X/glycine/dp_dataset_scf_1e-6/043",

			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/003",
			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/004",
			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/005",
			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/006",
			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/007",
			"/home/pengchao/glycine/dataset/KS_M062X/waterslab/dp_dataset_newmap_cvs_1e-7/008"
			
		],
	    "batch_size":	"auto",
        "auto_prob": 	"prob_sys_size; 0:14:0.40; 14:56:0.55; 56:62:0.05",	
	    "_comment": " training_data that's all--------------------------------------------------------------------"
		},
		"_comment": " training that's all-------------------------------------------------------------------------"		
    }
}
